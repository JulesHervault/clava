<?xml version="1.0"?>
<!-- 
	When changing the joinpoint model, do not forget to update the Clava document.
	
	https://docs.google.com/document/d/1uPrvuVBXHSbjDTfehpEeLDz9hgIr8EuJJJvBc5A70rs/edit#heading=h.hii8b3kunout
 -->
<joinpoints root_class="program">

	<!-- 
	<global>
		<select alias="descendant"		class="joinpoint" />
	</global>
	 -->
	 
	<!-- EMPTY -->
	<!-- Utility joinpoint, to represent empty nodes when directly accessing the tree -->
	<joinpoint class="empty"/>
	
	<!--  CLAVA EXCEPTION -->
	<!-- Utility joinpoint, to represent certain problems when generating join points -->
	<joinpoint class="clavaException"/>
	
	<!-- PROGRAM -->
	<!-- Represents the complete program and is the topmost joinpoint in the hierarchy.  -->
	<joinpoint class="program">
		<select class="file"/>
	</joinpoint>
	
	<!-- FILE-->
	<joinpoint class="file">
		<select alias="stmt"			class="statement"/>
		<select alias="childStmt"		class="statement"/>
		<select 						class="function"/>
		<select 						class="method"/>
		<select 						class="record"/>
		<select 						class="struct"/>
		<select 						class="class"/>
		<select							class="pragma"/>
		<select							class="marker"/>
		<select							class="tag"/>		
		<select 						class="vardecl"/>
		<select 						class="comment"/>
		<select 						class="include"/>	
		<select 						class="typedefDecl"/>			
		<select 						class="decl"/>		
	</joinpoint>
	
	<joinpoint class="include" extends="decl">
	</joinpoint>
	
	<!-- RECORD -->
	<joinpoint class="record" extends="namedDecl">
		<select 	class="field"/>		
	</joinpoint>
	
	<!-- FIELD -->
	<joinpoint class="field" extends="declarator">
	</joinpoint>
	
	<!-- STRUCT -->
	<joinpoint class="struct" extends="record">
<!--		<select alias="field"	class="namedDecl"/> -->
	</joinpoint>


	<!--  CLASS -->
	<joinpoint class="class" extends="record">
		<select class="method"/>
	</joinpoint>	
	
	<!-- PRAGMA -->
	<joinpoint class="pragma">
		<select alias="target" class="joinpoint"/>
	</joinpoint>
	
	
	<!-- MARKER -->
	<joinpoint class="marker" extends="pragma">
		<select alias="contents"			class="scope"/>
	</joinpoint>
	
	<!-- TAG -->
	<joinpoint class="tag" extends="pragma" tooltip="A pragma that references a point in the code and sticks to it">
	</joinpoint>
	
	<!-- OMP PRAGMA -->
	<joinpoint class="omp" extends="pragma">
	</joinpoint>
	
	
	<!-- DECL -->
	<joinpoint class="decl"/>
	
	<!-- NAMED DECL -->
	<joinpoint class="namedDecl" extends="decl"/>
	
	<!-- DECLARATOR DECL -->
	<joinpoint class="declarator" extends="namedDecl"/>
	
	
	<!-- VAR DECLARATION -->
 	<joinpoint class="vardecl" extends="declarator">
 		<select alias="init"			class="expression"/>
 	</joinpoint>  		
	
	
	<!-- TYPEDEF DECL -->
	<joinpoint class="typedefDecl" extends="namedDecl">
 	</joinpoint>  		
	
	<!-- ENUM DECL -->
	<joinpoint class="enumDecl" extends="namedDecl">
		<select alias="enumerator" 		class="enumeratorDecl"/>		
 	</joinpoint>  
 	
 	<!-- ENUMERATOR DECL -->
	<joinpoint class="enumeratorDecl" extends="namedDecl">
 	</joinpoint>  
	
	<!--  FUNCTION PARAMETER -->
	<joinpoint class="param" extends="vardecl">
	</joinpoint>


	<!-- FUNCTION -->
	<joinpoint class="function" extends="declarator">
		<!--  <select 						class="body"/>   -->
	 	<select alias="body" 			class="scope"/>
		<select 						class="param"/>
		<select 						class="decl"/>
	</joinpoint>
		
	<!-- METHOD -->
	<joinpoint class="method" extends="function" tooltip="C++ function">
	</joinpoint>			

		
		
	<!-- SCOPE-->
	<joinpoint class="scope" extends="statement">
		<select alias="stmt"			class="statement"/> 
		<select alias="childStmt"		class="statement"/>
		
		<select							class="scope"/>
		<select							class="if"/>
		<select							class="loop"/>
		<select							class="pragma"/>
		<select							class="marker"/>
		<select							class="tag"/>	
		<select							class="omp"/>	
		<select 						class="comment"/>
	</joinpoint>
	
	<!-- BODY -->
	<!-- <joinpoint class="body" extends="scope">
	</joinpoint>  -->
	
	
	<!-- STATEMENT -->
	<joinpoint class="statement">
		<select alias="expr"			class="expression"/>
		<select alias="childExpr"		class="expression"/>
		<select 						class="call"/>
 		<select alias="stmtCall"		class="call"/>
 		<select 						class="memberCall"/>
		<select							class="memberAccess"/>
 		<select							class="arrayAccess"/>
 		<select 						class="vardecl"/>
		<select 						class="varref"/>
		<select							class="op"/>		
		<select							class="binaryOp"/>
		<select							class="unaryOp"/>
		<select							class="newExpr"/>
		<select							class="deleteExpr"/>		
	</joinpoint>
	

	<!-- LOOP -->
	<joinpoint class="loop" extends="statement">
		<select alias="init"			class="statement"/>	
		<select alias="cond"			class="statement"/>
		<select alias="step"			class="statement"/>
		<select alias="body" 			class="scope"/> 
		<!-- <select 			 			class="body"/>  -->
	</joinpoint>	

	 
	<!-- IF -->
	<joinpoint class="if" extends="statement">
		<select alias="cond"			class="expression"/>
		<select alias="condDecl"		class="vardecl"/>
		<select alias="then"			class="scope"/>	
		<select alias="else"			class="scope"/>	
		<select	alias="body"			class="scope"/>
		<!-- <select 			 			class="body"/> -->
	</joinpoint>

	<!-- WRAPPER STMT -->
	<joinpoint class="wrapperStmt" extends="statement">
	</joinpoint>

	<!-- RETURN STMT -->
	<joinpoint class="returnStmt" extends="statement">
	</joinpoint>


	<!-- CALL -->	
	<joinpoint class="call" 	extends="expression">
		<select alias="callee"		class="expression"/>
		<select alias="arg"			class="expression"/>
	</joinpoint>
	
	<!-- MEMBER CALL -->	
	<joinpoint class="memberCall" 	extends="call">
	</joinpoint>

	<!-- OPERATOR -->	
	<joinpoint class="op" 	extends="expression">
	</joinpoint>
	
	<!-- BINARY OPERATOR -->	
	<joinpoint class="binaryOp" 	extends="op">
		<select alias="left"			class="expression"/>
		<select alias="right"			class="expression"/>
	</joinpoint>
	
	<joinpoint class="unaryOp" 	extends="op">
		<select alias="operand"			class="expression"/>
	</joinpoint>	
	
	<!-- NEW EXPR -->	
	<joinpoint class="newExpr" 	extends="expression">
	</joinpoint>	

	<!-- DELETE EXPR -->	
	<joinpoint class="deleteExpr" 	extends="expression">
	</joinpoint>	
	

	<!-- EXPRESSION -->
	<joinpoint class="expression">
			<select class="vardecl"/>
	</joinpoint>

	<!-- VAR REFERENCE -->
	<joinpoint class="varref"	extends="expression" tooltip="A reference to a variable">
	</joinpoint>

	<!-- CAST -->
	<joinpoint class="cast" extends="expression"/>	


	<!-- ArrayAccess -->
	<joinpoint class="arrayAccess" extends="expression">	
		<select alias="arrayVar" class="expression" tooltip="varref to the variable of the array access"/>
		<select alias="subscript" class="expression" tooltip="expression of the array access subscript"/>
	</joinpoint>

	<!-- MemberAccess -->
	<joinpoint class="memberAccess" extends="expression"/>	

	<!-- UnaryExprOrType -->
	<joinpoint class="unaryExprOrType" extends="expression"/>	

	<!-- COMMENT -->
	<joinpoint class="comment"/>

	<!-- TYPE -->
	<joinpoint class="type">
	</joinpoint>
		
	<!--  POINTER TYPE -->
	<joinpoint class="pointerType" extends="type">
	</joinpoint>
	
	<!--  ARRAY TYPE -->
	<joinpoint class="arrayType" extends="type">
	</joinpoint>

	<!--  ADJUSTED TYPE -->
	<joinpoint class="adjustedType" extends="type">
	</joinpoint>
			
	<!--  VARIABLE ARRAY TYPE -->
	<joinpoint class="variableArrayType" extends="arrayType">
	</joinpoint>		
		
	<!--  ENUM TYPE -->
	<joinpoint class="enumType" extends="type">
	</joinpoint>
	
	
	<!--  TEMPLATE SPECIALIZATION TYPE -->
	<joinpoint class="templateSpecializationType" extends="type">
	</joinpoint>	
	

	<!--  FUNCTION TYPE -->
	<joinpoint class="functionType" extends="type">
	</joinpoint>	
	
	<!--  TAG TYPE -->
	<joinpoint class="tagType" extends="type">
	</joinpoint>
		
	<!--  QUAL TYPE -->
	<joinpoint class="qualType" extends="type">
	</joinpoint>

	<!--  BUILTIN TYPE -->
	<joinpoint class="builtinType" extends="type">
	</joinpoint>

	<!--  PAREN TYPE -->
	<joinpoint class="parenType" extends="type">
	</joinpoint>
	
	<!--  UNDEFINED TYPE -->
	<joinpoint class="undefinedType" extends="type">
	</joinpoint>
	
	 	
</joinpoints>
