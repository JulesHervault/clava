digraph clava_join_point_hierarchy {
node [color=lightblue2, style=filled];
rankdir="LR"
node [fontsize=10, shape=box, height=0.25]
edge [fontsize=10]
"decl"->"accessSpecifier"
"type"->"adjustedType"
"expression"->"arrayAccess"
"type"->"arrayType"
"op"->"binaryOp"
"scope"->"body"
"type"->"builtinType"
"expression"->"call"
"statement"->"case"
"expression"->"cast"
"loop"->"cilkFor"
"call"->"cilkSpawn"
"statement"->"cilkSync"
"record"->"class"
"joinpoint"->"clavaException"
"joinpoint"->"comment"
"joinpoint"->"decl"
"namedDecl"->"declarator"
"expression"->"deleteExpr"
"type"->"elaboratedType"
"joinpoint"->"empty"
"namedDecl"->"enumDecl"
"tagType"->"enumType"
"namedDecl"->"enumeratorDecl"
"joinpoint"->"expression"
"declarator"->"field"
"joinpoint"->"file"
"declarator"->"function"
"type"->"functionType"
"statement"->"if"
"decl"->"include"
"expression"->"literal"
"statement"->"loop"
"pragma"->"marker"
"expression"->"memberAccess"
"call"->"memberCall"
"function"->"method"
"decl"->"namedDecl"
"expression"->"newExpr"
"pragma"->"omp"
"expression"->"op"
"vardecl"->"param"
"type"->"parenType"
"type"->"pointerType"
"joinpoint"->"pragma"
"joinpoint"->"program"
"type"->"qualType"
"namedDecl"->"record"
"statement"->"returnStmt"
"statement"->"scope"
"joinpoint"->"statement"
"record"->"struct"
"statement"->"switch"
"pragma"->"tag"
"type"->"tagType"
"type"->"templateSpecializationType"
"op"->"ternaryOp"
"expression"->"this"
"joinpoint"->"type"
"typedefNameDecl"->"typedefDecl"
"namedDecl"->"typedefNameDecl"
"type"->"typedefType"
"expression"->"unaryExprOrType"
"op"->"unaryOp"
"type"->"undefinedType"
"declarator"->"vardecl"
"arrayType"->"variableArrayType"
"expression"->"varref"
"statement"->"wrapperStmt"
}
